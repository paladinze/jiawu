# import  * from './generated/prisma.graphql'

type Query {
  user(where: UserWhereUniqueInput!): User
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  course(where: CourseWhereUniqueInput!): Course
  courses(
    where: CourseWhereInput
    orderBy: CourseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Course]!
}

type Mutation {
  login(data: LoginInput!): AuthPayload!
  createUser(data: CreateUserInput!): AuthPayload!
  updateUser(data: UpdateUserInput!): User!
  createReview(data: ReviewCreateInput!): Review!
}

type Subscription {
  review: Review
}

type User {
  id: ID!
  username: String!
  email: String!
  updatedAt: String!
  createdAt: String!
}

type AuthPayload {
  user: User!
  token: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
}

input UpdateUserInput {
  username: String
  email: String
  password: String
}
